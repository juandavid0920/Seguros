name: CI/CD Pipeline

on:
  push:
    branches:
      - main # Se activa cuando hay un push a la rama principal
  pull_request:
    branches:
      - main # Se activa en pull requests a la rama principal

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    # Comprobar el código del repositorio
    - name: Checkout repository
      uses: actions/checkout@v3

    # Configurar .NET Core SDK
    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x' # Cambiar a la versión que uses

    # Restaurar dependencias
    - name: Restore dependencies
      run: dotnet restore

    # Construir el proyecto
    - name: Build
      run: dotnet build --configuration Release --no-restore

    # Ejecutar pruebas
    - name: Run tests
      run: dotnet test --no-build --verbosity normal

  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
    # Comprobar el código del repositorio
    - name: Checkout repository
      uses: actions/checkout@v3

    # Configurar Docker
    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Construir y etiquetar la imagen de Docker
    - name: Build and tag Docker image
      run: |
        docker build -t my-app:${{ github.sha }} .
        docker tag my-app:${{ github.sha }} my-dockerhub-username/my-app:latest

    # Subir la imagen a DockerHub
    - name: Push Docker image
      run: |
        docker push my-dockerhub-username/my-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build-and-push

    steps:
    # Despliegue a Azure App Service o servidor configurado
    - name: Deploy to Azure App Service
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'my-app-service-name' # Cambiar por el nombre de tu App Service
        slot-name: 'production'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: '.'
